    #turns out this is useless, as the stats api uses usernames, not epic ids.
    #Keeping this here anyways because i can totaly reuse this for the arcaea api
    #async def link_accounts(self,discord_id,epic_id, sql_man):
    #    #check if current id exists already
    #    resultset = await sql_man.select('user', '*',f'discord_id IS \'{discord_id}\'')
    #    if len(resultset) == 0:
    #        if len(epic_id) == 32:
    #           try:
    #                await sql_man.insert('user', f'\'{discord_id}\',\'{epic_id}\'')
    #                return 'Accounts linked successfully!'
    #            except Exception as e:
    #                self.logger.error(f"Account link error: {discord_id},{epic_id} - {e}")
    #                return 'Something went wrong when linking your account.'
    #        return "Invalid Epic Games ID." 
    #    return "Account already linked."
    
    #async def is_user_in_database(self,sql_man,discord_id):
    #    #checks if the user's epic id is in the database, return epic id if true, null if false
    #    resultset = await sql_man.select('user', '*',f'discord_id IS \'{discord_id}\'')
    #    if len(resultset) != 0:
    #        print(resultset[0])
    #        return resultset[0]
    #    else:
    #        return None
    
#in main app.py...
@fn.command(name="link", description="link your Epic account to your Discord account to make stats commands work")
async def fn_cosmetic(ctx, epic_games_id: str):
    result = await fortnite.link_accounts(ctx.author.id, epic_games_id, fortnite_sql_man)
    await ctx.respond(result, ephemeral=True)
    # await ctx.respond("Whoops! Under construction!", ephemeral=True)